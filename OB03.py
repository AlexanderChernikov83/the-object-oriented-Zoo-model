import json


# ---------- 1. –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å Animal ----------
class Animal:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def make_sound(self):
        return "Some generic animal sound"

    def eat(self):
        return f"{self.name} –µ—Å—Ç –ø–∏—â—É."


# ---------- 2. –ü–æ–¥–∫–ª–∞—Å—Å—ã –∂–∏–≤–æ—Ç–Ω—ã—Ö ----------
class Bird(Animal):
    def __init__(self, name, age, can_fly=True):
        super().__init__(name, age)
        self.can_fly = can_fly

    def make_sound(self):
        return "–ß–∏—Ä–∏–∫-—á–∏—Ä–∏–∫"


class Mammal(Animal):
    def __init__(self, name, age, fur_color="brown"):
        super().__init__(name, age)
        self.fur_color = fur_color

    def make_sound(self):
        return "–†-—Ä-—Ä-—Ä"


class Reptile(Animal):
    def __init__(self, name, age, is_venomous=False):
        super().__init__(name, age)
        self.is_venomous = is_venomous

    def make_sound(self):
        return "–®—à—à—à—à..."


# ---------- 3. –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º ----------
def animal_sound(animals):
    print("\nüîä –ó–≤—É–∫–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö:")
    for animal in animals:
        print(f"{animal.name} –≥–æ–≤–æ—Ä–∏—Ç: {animal.make_sound()}")


# ---------- 4. –ö–ª–∞—Å—Å Zoo (–∫–æ–º–ø–æ–∑–∏—Ü–∏—è) ----------
class Zoo:
    def __init__(self, name):
        self.name = name
        self.animals = []
        self.staff = []

    def add_animal(self, animal):
        self.animals.append(animal)

    def add_staff(self, staff_member):
        self.staff.append(staff_member)

    def show_info(self):
        print(f"\nüìç –ó–æ–æ–ø–∞—Ä–∫: {self.name}")
        print("–ñ–∏–≤–æ—Ç–Ω—ã–µ:")
        for animal in self.animals:
            print(f" - {animal.name}, {animal.age} –ª–µ—Ç, –≥–æ–≤–æ—Ä–∏—Ç: {animal.make_sound()}")
        print("–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:")
        for staff in self.staff:
            print(f" - {staff.name} ({staff.__class__.__name__})")

    def save_to_file(self, filename):
        data = {
            "zoo_name": self.name,
            "animals": [
                {
                    "type": animal.__class__.__name__,
                    "name": animal.name,
                    "age": animal.age
                } for animal in self.animals
            ],
            "staff": [
                {
                    "type": staff.__class__.__name__,
                    "name": staff.name
                } for staff in self.staff
            ]
        }
        with open(filename, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False, indent=4)

    def load_from_file(self, filename):
        with open(filename, "r", encoding="utf-8") as f:
            data = json.load(f)
            self.name = data["zoo_name"]
            self.animals = []
            self.staff = []

            for a in data["animals"]:
                if a["type"] == "Bird":
                    self.animals.append(Bird(a["name"], a["age"]))
                elif a["type"] == "Mammal":
                    self.animals.append(Mammal(a["name"], a["age"]))
                elif a["type"] == "Reptile":
                    self.animals.append(Reptile(a["name"], a["age"]))

            for s in data["staff"]:
                if s["type"] == "ZooKeeper":
                    self.staff.append(ZooKeeper(s["name"]))
                elif s["type"] == "Veterinarian":
                    self.staff.append(Veterinarian(s["name"]))


# ---------- 5. –ö–ª–∞—Å—Å—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ ----------
class ZooKeeper:
    def __init__(self, name):
        self.name = name

    def feed_animal(self, animal):
        print(f"{self.name} –∫–æ—Ä–º–∏—Ç {animal.name}. {animal.eat()}")


class Veterinarian:
    def __init__(self, name):
        self.name = name

    def heal_animal(self, animal):
        print(f"{self.name} –ª–µ—á–∏—Ç {animal.name}. {animal.name} —Ç–µ–ø–µ—Ä—å —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –ª—É—á—à–µ!")


# ---------- –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ----------
if __name__ == "__main__":
    # –°–æ–∑–¥–∞—ë–º –∑–æ–æ–ø–∞—Ä–∫
    my_zoo = Zoo("–ó–æ–æ–ª–µ–Ω–¥")

    # –î–æ–±–∞–≤–ª—è–µ–º –∂–∏–≤–æ—Ç–Ω—ã—Ö
    my_zoo.add_animal(Bird("–ü–æ–ø—É–≥–∞–π", 2))
    my_zoo.add_animal(Mammal("–¢–∏–≥—Ä", 5))
    my_zoo.add_animal(Reptile("–ó–º–µ—è", 3, is_venomous=True))

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    zookeeper = ZooKeeper("–ò–≤–∞–Ω")
    vet = Veterinarian("–û–ª—å–≥–∞")
    my_zoo.add_staff(zookeeper)
    my_zoo.add_staff(vet)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–æ–æ–ø–∞—Ä–∫–µ
    my_zoo.show_info()

    # –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º: –∑–≤—É–∫–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö
    animal_sound(my_zoo.animals)

    # –î–µ–π—Å—Ç–≤–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    zookeeper.feed_animal(my_zoo.animals[1])
    vet.heal_animal(my_zoo.animals[2])

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    my_zoo.save_to_file("zoo_data.json")
    print("\nüìÅ –î–∞–Ω–Ω—ã–µ –∑–æ–æ–ø–∞—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
    loaded_zoo = Zoo("–ü—É—Å—Ç–æ")
    loaded_zoo.load_from_file("zoo_data.json")
    print("\nüì• –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    loaded_zoo.show_info()
